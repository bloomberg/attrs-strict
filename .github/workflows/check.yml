name: check
on:
  push:
  pull_request:

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: pre-commit/action@v3.0.0
        env:
          SETUPTOOLS_USE_DISTUTILS: stdlib

  test:
    name: ${{ matrix.py }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        py:
          - "3.11"
          - "3.10"
          - "3.9"
          - "3.8"
          - "3.7"
          - "pypy-3.7-v7.3.7"

    steps:
      - uses: actions/checkout@v3
      - name: setup python for tox
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: install tox
        run: python -m pip install tox
      - name: setup python for test ${{ matrix.py }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}
      - name: Pick environment to run
        run: |
          import platform; import os; import sys; import codecs
          base = f"py{'' if platform.python_implementation() == 'CPython' else 'py'}3{sys.version_info[1]}"
          env = f"TOXENV={base}\n"
          print(f"Picked:\n{env}for{sys.version}")
          with codecs.open(os.environ["GITHUB_ENV"], "a", "utf-8") as file_handler:
               file_handler.write(env)
        shell: python
      - name: setup test suite for ${{ matrix.py }}
        run: tox -vv --notest
      - name: run test suite for ${{ matrix.py }}
        run: tox --skip-pkg-install
      - name: Rename coverage report file
        run: |
          import os; import sys
          os.rename(f".tox/.coverage.{os.environ['TOXENV']}", f".tox/.coverage.{os.environ['TOXENV']}-{sys.platform}")
        shell: python
      - name: Upload coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: ".tox/.coverage.*"

  coverage:
    name: Combine coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install tox
        run: python -m pip install tox
      - name: Setup coverage tool
        run: tox -e coverage --notest
      - name: Install package builder
        run: python -m pip install build
      - name: Build package
        run: pyproject-build --wheel .
      - name: Download coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data
          path: .tox
      - name: Combine and report coverage
        run: tox -e coverage
      - name: Upload HTML report
        uses: actions/upload-artifact@v3
        with:
          name: html-report
          path: .tox/htmlcov

  check:
    name: tox env ${{ matrix.tox_env }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        tox_env:
          - readme
          - docs
          - type
    steps:
      - uses: actions/checkout@v3
      - name: setup Python "3.11"
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: install tox
        run: python -m pip install tox
      - name: run check for ${{ matrix.tox_env }}
        run: python -m tox -e ${{ matrix.tox_env }}

  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [check, coverage, lint]
    runs-on: ubuntu-22.04
    steps:
      - name: setup python to build package
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: install build
        run: python -m pip install build
      - uses: actions/checkout@v3
      - name: build package
        run: python -m build --sdist --wheel . -o dist
      - name: publish to PyPi
        uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.pypi_password }}
